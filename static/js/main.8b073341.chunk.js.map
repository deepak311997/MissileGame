{"version":3,"sources":["components/missiles.tsx","components/finish-line.tsx","context/player-info.tsx","context/game-data-context.tsx","components/alert-dialog.tsx","components/player.tsx","components/timer.tsx","components/game-level.tsx","components/main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Missile","styled","div","_templateObject","MissilesContainer","_templateObject2","Bounce2s","_templateObject3","keyframes","_templateObject4","bounceInDown","Bounce3s","_templateObject5","_templateObject6","Bounce4s","_templateObject7","_templateObject8","Missiles","react_default","a","createElement","react_svg_esm","id","src","Symbol","finish_line_templateObject","FinishLine","PlayerContext","React","createContext","PlayerProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","isRunning","setIsRunning","Provider","value","toggleRunning","GameDataContext","LevelProvider","level","setLevel","_useState3","_useState4","wins","winCounter","_useState5","_useState6","losses","lossCounter","handleLevelChange","handleWinLoss","isWin","AlertDialog","props","Dialog","open","onClose","handleDialogAlert","aria-labelledby","DialogTitle","DialogContent","DialogContentText","isLost","DialogActions","Button","onClick","color","player_templateObject","levels","1","displacement","2","3","Player","distanceTimeout","finalBoundary","missileBoundaries","player","useContext","gameContext","direction","setDirection","distance","updateDistance","isDialogOpen","handleDialog","_useState7","_useState8","setLost","_useState9","_useState10","isSuccess","setSuccess","man","document","getElementById","missiles","querySelectorAll","destination","changeDirection","event","keyCode","clearTimeout","useEffect","addEventListener","removeEventListener","isFinished","isExploded","Array","i","length","getBoundingClientRect","manBoundary","some","missile","right","left","bottom","top","setTimeout","Fragment","player_Symbol","style","transform","concat","Container","timer_templateObject","Timer","currentTime","setCurrentTime","GreenRadio","withStyles","root","green","&$checked","checked","Radio","assign","BlueRadio","blue","RedRadio","red","RadioButtons","handleChange","Number","target","className","onChange","name","inputProps","aria-label","Typography","Wrapper","main_templateObject","PlayGround","main_templateObject2","Main","timer","components_player","components_missiles","finish_line","App","console","log","player_info_PlayerProvider","game_data_context_LevelProvider","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b073341.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { bounceInDown } from 'react-animations';\r\nimport ReactSVG from 'react-svg';\r\n\r\nconst Missile = styled.div`\r\n    width: 30px;\r\n    fill: #aaa;\r\n    transform: rotate(40deg);\r\n`;\r\n\r\nconst MissilesContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n  width: 90%;\r\n`;\r\n\r\nconst Bounce2s = styled(Missile)`\r\n  animation: 3s ${keyframes `${bounceInDown}`} infinite\r\n  `;\r\nconst Bounce3s = styled(Missile)`\r\n  animation: 4s ${keyframes `${bounceInDown}`} infinite\r\n  `;\r\nconst Bounce4s = styled(Missile)`\r\n  animation: 5s ${keyframes `${bounceInDown}`} infinite\r\n  `;\r\n\r\nconst Missiles: React.FC = () => {\r\n    return (\r\n        <MissilesContainer>\r\n            <Bounce2s>\r\n                <ReactSVG\r\n                id='missile'\r\n                src=\"missile.svg\"\r\n                />\r\n            </Bounce2s>\r\n            <Bounce3s>\r\n                <ReactSVG\r\n                id='missile'\r\n                src=\"missile.svg\"\r\n                />\r\n            </Bounce3s>\r\n            <Bounce4s>\r\n                <ReactSVG\r\n                id='missile'\r\n                src=\"missile.svg\"\r\n                />\r\n            </Bounce4s>\r\n        </MissilesContainer>\r\n    );\r\n};\r\n\r\nexport default Missiles;\r\n","import React from 'react';\r\nimport ReactSVG from 'react-svg';\r\nimport styled from \"styled-components\";\r\n\r\nconst Symbol = styled.div`\r\n  width: 100px;\r\n  fill: #bb8cfc\r\n`;\r\n\r\nconst FinishLine: React.FC = () => {\r\n    return (\r\n      <Symbol>\r\n          <ReactSVG\r\n              id='destination'\r\n              src=\"finish-line.svg\"\r\n            />\r\n      </Symbol>\r\n    );\r\n\r\n}\r\nexport default FinishLine;\r\n","import React, { useState } from 'react';\r\n\r\nconst PlayerContext = React.createContext({});\r\n\r\n\r\nexport const PlayerProvider = ({ children }) => {\r\n    const [ isRunning, setIsRunning ] = useState(false);\r\n\r\n    const toggleRunning = () => {\r\n        setIsRunning(!isRunning);\r\n    };\r\n\r\n    return <PlayerContext.Provider value={{\r\n        isRunning,\r\n        toggleRunning\r\n    }}>\r\n        {children}\r\n        </PlayerContext.Provider>\r\n};\r\n\r\n\r\nexport default PlayerContext;\r\n","import React, { useState } from 'react';\r\n\r\nconst GameDataContext = React.createContext({});\r\n\r\nexport const LevelProvider = ({ children }) => {\r\n    const [ level, setLevel ] = useState(1);\r\n    const [ wins, winCounter ] = useState(0);\r\n    const [ losses, lossCounter ] = useState(0);\r\n\r\n    const handleLevelChange = (level) => {\r\n        setLevel(level);\r\n    };\r\n\r\n    const handleWinLoss = (isWin) => {\r\n        if(isWin) {\r\n            winCounter(wins + 1);\r\n        } else {\r\n            lossCounter(losses + 1);\r\n        }\r\n    };\r\n\r\n    return <GameDataContext.Provider value={{\r\n        level,\r\n        handleLevelChange,\r\n        wins,\r\n        losses,\r\n        handleWinLoss,\r\n    }}>\r\n        {children}\r\n    </GameDataContext.Provider>\r\n};\r\n\r\nexport default GameDataContext;\r\n","import React from \"react\";\r\n\r\nimport { DialogTitle, DialogContent, DialogContentText, Button, Dialog, DialogActions } from \"@material-ui/core\";\r\n\r\nexport default function AlertDialog(props){\r\n\r\n    return(\r\n        <Dialog\r\n            open={true}\r\n            onClose={props.handleDialogAlert}\r\n            aria-labelledby=\"responsive-dialog-title\"\r\n    >\r\n        <DialogTitle id=\"responsive-dialog-title\">Game Alert</DialogTitle>\r\n        <DialogContent>\r\n        <DialogContentText>\r\n            {props.isLost ? 'Sorry, you lost the game !!' : 'Cheers !! You won the game :D'}\r\n        </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={props.handleDialogAlert} color=\"primary\">Close</Button>\r\n            <Button onClick={props.handleDialogAlert} color=\"primary\">Restart</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n    );\r\n};\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport ReactSVG from 'react-svg';\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport PlayerContext from '../context/player-info';\r\nimport GameDataContext from '../context/game-data-context';\r\nimport { bounceInDown } from \"react-animations\";\r\nimport AlertDialog from './alert-dialog';\r\n\r\nconst Symbol = styled.div`\r\n  width: 50px\r\n  fill: #aaa;\r\n  height: 50px;\r\n  `;\r\n\r\nconst levels = {\r\n    1: {\r\n        displacement: 20,\r\n    },\r\n    2: {\r\n        displacement: 30,\r\n    },\r\n    3: {\r\n        displacement: 50,\r\n    }\r\n};\r\n\r\nconst Player: React.FC = () => {\r\n    const player = useContext(PlayerContext);\r\n    const gameContext = useContext(GameDataContext);\r\n    const [ direction, setDirection ] = useState('right');\r\n    const [ distance, updateDistance ] = useState(0);\r\n    const [ isDialogOpen, handleDialog ] = useState(false);\r\n    const [ isLost, setLost ] = useState(false);\r\n    const [ isSuccess, setSuccess ] = useState(false);\r\n    const isRunning = player[\"isRunning\"];\r\n    const toggleRunning = player[\"toggleRunning\"];\r\n    const level = gameContext[\"level\"];\r\n    const handleWinLoss = gameContext[\"handleWinLoss\"];\r\n    var man = document.getElementById('man');\r\n    var missiles = document.querySelectorAll('#missile');\r\n    var destination = document.getElementById('destination');\r\n    var distanceTimeout, finalBoundary, missileBoundaries;\r\n\r\n    function changeDirection(event) {\r\n      if (event.keyCode === 39) {\r\n        setDirection('right');\r\n          if(!isRunning) {\r\n            toggleRunning();\r\n        }\r\n        clearTimeout(distanceTimeout);\r\n      }\r\n      if (event.keyCode === 37) {\r\n        setDirection('left');\r\n          if(!isRunning) {\r\n          toggleRunning();\r\n          clearTimeout(distanceTimeout);\r\n        }\r\n      }\r\n    }\r\n\r\n    function resetGameData() {\r\n        setLost(false);\r\n        setSuccess(false);\r\n        updateDistance(0);\r\n        if(isRunning) {\r\n            toggleRunning();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n      document.addEventListener('keydown', changeDirection);\r\n\r\n      return () => document.removeEventListener('keydown', changeDirection);\r\n    },[isRunning]);\r\n\r\n    useEffect(() => {\r\n        if(isRunning) {\r\n            var isFinished, isExploded;\r\n            missileBoundaries = new Array(3);\r\n            if (missiles) {\r\n                for (let i = 0; i < missileBoundaries.length; i++) {\r\n                    missileBoundaries[i] = missiles[i].getBoundingClientRect();\r\n                }\r\n            }\r\n            if (destination) {\r\n                finalBoundary = destination.getBoundingClientRect();\r\n            }\r\n            if (man) {\r\n                const manBoundary = man.getBoundingClientRect();\r\n                isExploded = missileBoundaries.some(missile => !(missile.right < manBoundary.left - 5 ||\r\n                    missile.left > manBoundary.right - 5 || missile.bottom < manBoundary.top - 5 ||\r\n                    missile.top > manBoundary.bottom - 5));\r\n                isFinished = !(finalBoundary.right + 10 < manBoundary.left - 5 ||\r\n                    finalBoundary.left + 10 > manBoundary.right - 5 || finalBoundary.bottom < manBoundary.top - 5 ||\r\n                    finalBoundary.top > manBoundary.bottom - 5);\r\n                if (isExploded) {\r\n                    setLost(true);\r\n                } else if (isFinished) {\r\n                    setSuccess(true);\r\n                }\r\n            }\r\n            if (!isExploded && !isFinished) {\r\n                distanceTimeout = setTimeout(() => {\r\n                    if (direction === 'right') {\r\n                        updateDistance(distance + levels[level].displacement);\r\n                    } else {\r\n                        if (distance - levels[level].displacement > 0) {\r\n                            updateDistance(distance - levels[level].displacement);\r\n                        }\r\n                    }\r\n                }, 50);\r\n            }\r\n        }\r\n\r\n        return () => clearTimeout(distanceTimeout);\r\n    }, [isRunning, distance, direction]);\r\n\r\n    useEffect(() => {\r\n        if(isLost) {\r\n            handleDialog(true);\r\n            handleWinLoss(false);\r\n        } else if(isSuccess) {\r\n            handleDialog(true);\r\n            handleWinLoss(true);\r\n        }\r\n    }, [isLost, isSuccess]);\r\n\r\n    const handleDialogAlert = () => {\r\n        resetGameData();\r\n        handleDialog(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Symbol>\r\n              <div style={{ transform: `translateX(${distance}px)` }}>\r\n                  <ReactSVG\r\n                      id='man'\r\n                      src=\"running-man.svg\"\r\n                  />\r\n              </div>\r\n          </Symbol>\r\n            {isDialogOpen && <AlertDialog\r\n                handleDialogAlert={() => handleDialogAlert()}\r\n                isLost={isLost}\r\n            />}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from \"styled-components\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\n\r\nconst Container = styled.div`\r\n  margin: 10px 0;\r\n  font-size: 15px;\r\n  width: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Timer: React.FC = () => {\r\n\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCurrentTime(currentTime + 1);\r\n    }, 1000)\r\n  }, [currentTime]);\r\n\r\n  return (\r\n    <Container>\r\n      <div>Timer</div>\r\n      <div>{currentTime}</div>\r\n    </Container>\r\n  );\r\n};\r\nexport default Timer;\r\n","import React, {useContext} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { red, green, blue } from '@material-ui/core/colors';\r\nimport Radio, { RadioProps } from '@material-ui/core/Radio';\r\nimport GameDataContext from '../context/game-data-context';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst GreenRadio = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst BlueRadio = withStyles({\r\n    root: {\r\n        color: blue[400],\r\n        '&$checked': {\r\n            color: blue[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst RedRadio = withStyles({\r\n    root: {\r\n        color: red[400],\r\n        '&$checked': {\r\n            color: red[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\n\r\nexport default function RadioButtons() {\r\n    const gameContext = useContext(GameDataContext);\r\n    const level = gameContext[\"level\"];\r\n    const wins = gameContext[\"wins\"];\r\n    const losses = gameContext[\"losses\"];\r\n    const handleLevelChange = gameContext[\"handleLevelChange\"];\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        handleLevelChange(Number(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div className='level-container'>\r\n            <GreenRadio\r\n                checked={level === 1}\r\n                onChange={handleChange}\r\n                value={1}\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Easy' }}\r\n            />\r\n            <Typography>\r\n                Easy\r\n            </Typography>\r\n            <BlueRadio\r\n                checked={level === 2}\r\n                onChange={handleChange}\r\n                value={2}\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Medium' }}\r\n            />\r\n            <Typography>\r\n                Medium\r\n            </Typography>\r\n            <RedRadio\r\n                checked={level === 3}\r\n                onChange={handleChange}\r\n                value={3}\r\n                name=\"radio-button-demo\"\r\n                inputProps={{ 'aria-label': 'Hard' }}\r\n            />\r\n            <Typography>\r\n                Hard\r\n            </Typography>\r\n        </div>\r\n            <div className='level-container'>\r\n                <Typography>\r\n                    {`Wins: ${wins}`}\r\n                </Typography>\r\n                <Typography>\r\n                    {`Losses: ${losses}`}\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport Missiles from './missiles';\r\nimport FinishLine from './finish-line';\r\nimport Player from './player';\r\nimport Timer from './timer';\r\nimport GameLevel from './game-level';\r\n\r\nconst Wrapper = styled.div`\r\n    height: 70%;\r\n`;\r\n\r\nconst PlayGround = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  height: 90%;\r\n`;\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <Wrapper>\r\n            <div>\r\n                <Timer />\r\n                <GameLevel />\r\n            </div>\r\n            <PlayGround>\r\n                <Player />\r\n                <Missiles />\r\n                <FinishLine />\r\n            </PlayGround>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default Main;\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Main from './components/main';\r\nimport { PlayerProvider } from './context/player-info';\r\nimport { LevelProvider } from './context/game-data-context';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  useEffect(() => {\r\n    console.log('we are in');\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <PlayerProvider>\r\n          <LevelProvider>\r\n            <Main />\r\n          </LevelProvider>\r\n      </PlayerProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}